{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","API","fetch","then","res","json","data","results","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAmCeA,EAhBH,SAAC,GAAD,IAdQC,EAcNC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,YAAYC,EAApB,EAAoBA,SAASC,EAA7B,EAA6BA,aAA7B,OACP,sBAAKC,UAAU,QAAf,UAEG,qBAAKC,IAAKJ,EArBF,mCAqBuBA,EAAa,iKAAkKK,IAAKN,IACnN,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,sBAAMI,UAAS,eApBPL,EAoB6BI,EAlB1CJ,GAAM,EAEE,QAEHA,GAAM,EACH,SAGA,QAUH,SAAuDI,OAE3D,sBAAKC,UAAU,aAAf,UACI,2CACA,4BAAIF,WC2BDK,MA9Cf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEoBF,mBAAS,IAF7B,mBAENG,EAFM,KAEKC,EAFL,KAGbC,qBAAU,WACRC,EARF,+GAUG,IACH,IAAMA,EAAU,SAACC,GAEfC,MAAMD,GACHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAELV,EAAUU,EAAKC,aAkBrB,OACE,qCACA,iCACE,sBAAMC,SAjBW,SAACC,GAEpBA,EAAEC,iBACCb,IACDG,EAtBJ,4FAsByBH,GAErBC,EAAc,MAWd,SAAgC,uBAAOa,SARtB,SAACF,GAEpBX,EAAcW,EAAEG,OAAOC,QAM4CA,MAAOhB,EAAYP,UAAU,SAASwB,KAAK,SAASC,YAAY,sBAGrI,qBAAKzB,UAAU,kBAAf,SAEGK,EAAOqB,OAAS,GAAKrB,EAAOsB,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aCtCPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.935eed9c.chunk.js","sourcesContent":["import React from 'react';\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n//const IMG_API=\"https://api.themoviedb.org/3/movie/{}/images?api_key=8f7bccef3f8984bf678d67de30041b19&language=en-US\"\n//const IMG_API = \"https://image.tmdb.org/t/p/w300\";\n\nconst setVoteClass=(vote)=>\n{\n    if(vote>=8)\n    {\n        return 'green'\n    }\n    else if(vote>=6){\n        return 'orange'\n    } \n    else{\n        return 'red'\n    }\n}\n\nconst Movie=({title,poster_path,overview,vote_average})=>\n    (<div className=\"movie\">\n        \n        <img src={poster_path?(IMG_API+poster_path):'https://images.unsplash.com/photo-1515634928627-2a4e0dae3ddf?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80'} alt={title} />\n        <div className=\"movie-info\">\n            <h3>{title}</h3>\n            <span className={`tag ${setVoteClass(vote_average)}`}>{vote_average}</span>\n        </div>\n        <div className=\"movie-over\">\n            <h2>Overview:</h2>\n            <p>{overview}</p>\n        </div>\n       \n    </div>);\n\n\nexport default Movie;\n\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport Movie from \"./components/Movie\";\n\nconst FEATURED_API =\n  \"https://api.themoviedb.org/3/movie/popular?api_key=8f7bccef3f8984bf678d67de30041b19&language=en-US&page=1\";\n\nconst SEARCH_API =\n  \"https://api.themoviedb.org/3/search/movie?api_key=8f7bccef3f8984bf678d67de30041b19&query=\";\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm,setSearchTerm]=useState('');\n  useEffect(() => {\n    getMovies(FEATURED_API);\n    \n  }, []);\n  const getMovies=(API)=>\n  {\n    fetch(API)\n      .then((res) => res.json())\n      .then((data) => {\n        \n        setMovies(data.results);\n      });\n  \n  }\n  const handleOnSubmit=(e)=>\n  {\n    e.preventDefault();\n    if(searchTerm){\n      getMovies(SEARCH_API+searchTerm);\n    \n      setSearchTerm('');\n    }\n  };\n  const handleOnChange=(e)=>\n  {\n    setSearchTerm(e.target.value);\n  }\n\n  return (\n    <>\n    <header>\n      <form onSubmit={handleOnSubmit}><input onChange={handleOnChange} value={searchTerm} className=\"search\" type=\"search\" placeholder=\"Search . . . \" /></form>\n    \n  </header>\n  <div className=\"movie-container\">\n    \n    {movies.length > 0 && movies.map((movie) =>\n    <Movie key={movie.id} {...movie} />)}\n    </div>\n    </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}